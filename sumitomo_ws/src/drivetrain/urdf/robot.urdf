<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from simple_agv.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- ===== Initial differential robot URDF =====-->
<!-- Note: This is only for testing pourpuses of the
CAN communication programs we develop.-->
<robot name="simple_agv">
  <!--Note: The direction should be signaled with as (1 || -1) -->
  <!--Note: The direction should be signaled with as (1 || -1) -->
  <!-- = Transmission = -->
  <!--Note: I use "*" as a separator -->
  <!-- <xacro:macro name="transmission_block" params="joint_name *side *direction">
    
  </xacro:macro> -->
  <!-- === Link declaration === -->
  <!-- Base link -->
  <link name="map">
    <pose>0 0 0 0 0 0</pose>
  </link>
  <!-- Simple link definition-->
  <!-- I'll use chassis as my root link-->
  <!-- Note: The origin is relative to the link.
        it'll usually be 0, because displacement
        will happen on the Joint-->
  <link name="chassis">
    <visual>
      <geometry>
        <mesh filename="package://drivetrain/urdf/base_link.STL" scale="1.0 1.0 1.0"/>
      </geometry>
      <origin rpy="0 0 1.57079632679" xyz="0 0 0"/>
      <material name="white">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
    <!-- Collission -->
    <collision>
      <origin rpy="0 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://drivetrain/urdf/base_link.STL" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
    <!-- Inertial: Requred for Gazebo -->
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>
  <!-- === Joint definition === -->
  <!-- Reference frame -->
  <joint name="map_to_chassis" type="fixed">
    <parent link="map"/>
    <child link="chassis"/>
  </joint>
  <!-- Link (physical part)-->
  <link name="wheel_right">
    <visual>
      <!-- Shape -->
      <geometry>
        <cylinder length="0.1" radius="0.085"/>
      </geometry>
      <!-- Origin relative to the link's joint -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 0.5"/>
      </material>
    </visual>
    <!-- Collission -->
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0 "/>
      <geometry>
        <cylinder length="0.1" radius="0.085"/>
      </geometry>
    </collision>
    <!-- Inertial: Requred for Gazebo -->
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00263958333333" ixy="0" ixz="0" iyy="0.00263958333333" iyz="0" izz="0.0036125"/>
    </inertial>
    <!-- <joint_properties damping="0.0" friction="0.0"/> -->
  </link>
  <!-- Joint (connection between links) -->
  <joint name="joint_wheel_right" type="continuous">
    <parent link="chassis"/>
    <child link="wheel_right"/>
    <origin xyz="0 0.325 0.085"/>
    <!-- Axis rotation-->
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!-- -->
    <!-- Joint limits (Newtons) (rad/s)-->
    <limit effort="50" velocity="20"/>
  </joint>
  <!-- Transmission -->
  <transmission name="trans_right">
    <!-- Type -->
    <type>transmission_interface/SimpleTransmission</type>
    <!-- Joint -->
    <joint name="joint_wheel_right">
      <hardwareInterface> hardware_interface/EffortJointInterface </hardwareInterface>
    </joint>
    <!-- Actuator -->
    <actuator name="motor_right">
      <hardwareInterface> hardware_interface/EffortJointInterface </hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Link (physical part)-->
  <link name="wheel_left">
    <visual>
      <!-- Shape -->
      <geometry>
        <cylinder length="0.1" radius="0.08"/>
      </geometry>
      <!-- Origin relative to the link's joint -->
      <origin rpy="-1.57079632679 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 0.5"/>
      </material>
    </visual>
    <!-- Collission -->
    <collision>
      <origin rpy="-1.57079632679 0 0" xyz="0 0 0 "/>
      <geometry>
        <cylinder length="0.1" radius="0.085"/>
      </geometry>
    </collision>
    <!-- Inertial: Requred for Gazebo -->
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00263958333333" ixy="0" ixz="0" iyy="0.00263958333333" iyz="0" izz="0.0036125"/>
    </inertial>
    <!-- <joint_properties damping="0.0" friction="0.0"/> -->
  </link>
  <!-- Joint (connection between links) -->
  <joint name="joint_wheel_left" type="continuous">
    <parent link="chassis"/>
    <child link="wheel_left"/>
    <origin xyz="0 -0.325 0.085"/>
    <!-- Axis rotation-->
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!-- -->
    <!-- Joint limits (Newtons) (rad/s)-->
    <limit effort="50" velocity="20"/>
  </joint>
  <!-- Transmission -->
  <transmission name="trans_left">
    <!-- Type -->
    <type>transmission_interface/SimpleTransmission</type>
    <!-- Joint -->
    <joint name="joint_wheel_left">
      <hardwareInterface> hardware_interface/EffortJointInterface </hardwareInterface>
    </joint>
    <!-- Actuator -->
    <actuator name="motor_left">
      <hardwareInterface> hardware_interface/EffortJointInterface </hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- === Gazebo Plugin === -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo reference="chassis">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- Plugin update rate in Hz -->
      <updateRate>50</updateRate>
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>joint_wheel_left</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>joint_wheel_right</rightJoint>
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>0.57</wheelSeparation>
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.17</wheelDiameter>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>1.0</wheelAcceleration>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>20</wheelTorque>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <!-- <odometryTopic>odom</odometryTopic> -->
      <!-- Odometry frame, defaults to `odom` -->
      <!-- <odometryFrame>odom</odometryFrame> -->
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <!-- <robotBaseFrame>chassis</robotBaseFrame> -->
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <!-- <odometrySource>1</odometrySource> -->
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>true</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>false</publishOdom>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
    </plugin>
  </gazebo>
</robot>

